{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","className","Component","LoginForm","props","handleChange","event","setState","username","target","value","timeout","clearTimeout","setTimeout","name","boss","console","log","xhr","XMLHttpRequest","addEventListener","data","response","search","userData","open","send","getData","state","Fragment","htmlFor","type","this","onChange","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAGMA,GCHS,I,6KDKb,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA,cAAC,EAAD,Y,GALYC,cAYZC,E,kDAEL,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAACC,SAAUF,EAAMG,OAAOC,QACnC,EAAKC,SAASC,aAAa,EAAKD,SAClC,EAAKA,QAAUE,YAAW,YAwB9B,SAAiBC,EAAMC,GACrBC,QAAQC,IAAIH,GACZ,IAAII,EAAM,IAAIC,eACdD,EAAIE,iBAAiB,QAAQ,WAC1B,IAAIC,EAAOH,EAAII,SACXD,EAAKE,OAAO,iBAAiB,EAC/BR,EAAKR,SAAS,CAACiB,SAAU,2BAGvBH,EAAKE,OAAO,cAAc,EAC5BR,EAAKR,SAAS,CAACiB,SAAU,aAG3BR,QAAQC,IAAI,UAAUI,EAAKE,OAAO,eAChCR,EAAKR,SAAS,CAACiB,SAAU,iBAG9BN,EAAIO,KAAK,MAAO,iIAAiIX,GAAM,GACvJI,EAAIQ,OAzCKC,CAAQ,EAAKC,MAAMpB,SAAZ,kBAEhB,MATC,EAAKoB,MAAQ,CAAEpB,SAAU,GAAIgB,SAAU,eAFvB,E,qDAiBhB,OACE,eAAC,IAAMK,SAAP,WACI,uBAAOC,QAAQ,WAAf,mBAAuC,uBACrCC,KAAK,OACLjB,KAAK,WACLJ,MAAOsB,KAAKJ,MAAMpB,SAClByB,SAAUD,KAAK3B,eAEd2B,KAAKJ,MAAMJ,SAChB,oDAAuBQ,KAAKJ,MAAMpB,mB,GA5BjB0B,IAAMhC,WAsDfF,QEzDAmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b661b7e6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t     <LoginForm />\n      </header>\n    </div>\n  );\n  }\n}\n\nclass LoginForm extends React.Component {\n\n constructor(props){\n   super(props)\n   this.state = { username: '', userData: 'Press Enter'};\n }\n\n handleChange = event => {\n   this.setState({username: event.target.value})\n   if(this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n           getData(this.state.username, this)\n\n},500);\n };\n //handleEnter() {\n//   getData(this.state.username, this)\n //};\nrender() {\n   return (\n     <React.Fragment>\n         <label htmlFor=\"username\">HCIM </label><input\n           type=\"text\"\n           name=\"username\"\n           value={this.state.username}\n           onChange={this.handleChange}\n           //onKeyPress={e => {if (e.key === 'Enter') { this.handleEnter()}}}\n         />{this.state.userData}\n       <h3>Your username is: {this.state.username}</h3>\n     </React.Fragment>\n   );\n }\n}\n\nfunction getData(name, boss) {\n  console.log(name)\n  var xhr = new XMLHttpRequest()\n  xhr.addEventListener('load', () => {\n     var data = xhr.response;\n     if (data.search(\"was not found\")>0){\n       boss.setState({userData: \"is not in the hiscores\"})\n\treturn\n     }\n     if (data.search(\"dead hover\")>0) {\n       boss.setState({userData: \"is dead\"})\n\treturn\n     }\n     console.log(\"RESULT:\"+data.search(\"dead hover\"));\n       boss.setState({userData: \"is alive\"})\n     return\n  })\n  xhr.open('GET', 'https://secure.runescape.com/m=hiscore_hardcore_ironman/ranking?table=0&category_type=0&time_filter=0&date=1610390322195&user='+name, true)\n  xhr.send()\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}